# Generated by Django 2.0.2 on 2018-04-26 14:22

from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.TextField()),
                ('address2', models.TextField()),
                ('state', models.TextField()),
                ('zip', models.TextField()),
                ('country', models.TextField()),
                ('purpose', models.TextField(verbose_name='Home,Work,Vacation etc')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceId', models.IntegerField()),
                ('name', models.TextField()),
                ('model', models.TextField()),
                ('Manufacture', models.TextField()),
                ('OS', models.TextField()),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('weight', models.FloatField()),
                ('color', models.FloatField()),
                ('year', models.IntegerField()),
                ('length_Unit', models.FloatField()),
                ('weight_unit', models.FloatField()),
                ('note', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('duration', models.FloatField()),
                ('graduate', models.BooleanField()),
                ('country', models.TextField()),
                ('note', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('type', models.TextField(help_text='Sport,Music etc')),
                ('Description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageLocation', models.TextField(help_text='Image full name along with location where it is stored.')),
                ('description', models.TextField()),
                ('purpose', models.TextField(help_text='avatar,travel etc ')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('Region', models.TextField()),
                ('Description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LifeEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startTime', models.DateTimeField(help_text='Event start time')),
                ('endTime', models.DateTimeField(help_text='event end time')),
                ('latitude', models.FloatField(help_text='latitude')),
                ('longitude', models.FloatField(help_text='longitude')),
                ('inTransit', models.BooleanField(help_text='In transit')),
                ('speed', models.FloatField(help_text='Speed')),
                ('timeZone', models.IntegerField(help_text='Time zone')),
                ('event', models.TextField(help_text='Enter event name')),
                ('eventValue', models.TextField(help_text='event value')),
                ('os', models.TextField(help_text='operating system')),
                ('heartRate', models.IntegerField(help_text='Heart Rate')),
                ('bodyTemperature', models.FloatField(help_text='body temperature')),
                ('temperature', models.FloatField(help_text='temperature')),
                ('pressure', models.FloatField(help_text='pressure')),
                ('humidity', models.FloatField(help_text='humidity')),
            ],
        ),
        migrations.CreateModel(
            name='SensorEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceId', models.TextField(help_text='Enter device id')),
                ('timeStamp', models.DateTimeField(help_text='TimeStamp')),
                ('eventObject', jsonfield.fields.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginTime', models.DateTimeField()),
                ('endTime', models.DateTimeField()),
                ('addressId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Address')),
            ],
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Device')),
            ],
        ),
        migrations.CreateModel(
            name='UserEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('educationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Education')),
            ],
        ),
        migrations.CreateModel(
            name='UserHobby',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hobbyId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Hobby')),
            ],
        ),
        migrations.CreateModel(
            name='UserImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Image')),
            ],
        ),
        migrations.CreateModel(
            name='UserLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('languageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Language')),
            ],
        ),
        migrations.CreateModel(
            name='Userprofile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(help_text='bio of user')),
                ('adminNotes', models.TextField()),
                ('ageRange', models.TextField(help_text='The age segment for this person expressed as a minimum and maximum age. For example, more than 18, less than 21')),
                ('birthday', models.TextField()),
                ('firstName', models.TextField()),
                ('gender', models.CharField(max_length=1)),
                ('hometown', models.TextField()),
                ('userId', models.BigIntegerField()),
                ('installType', models.TextField()),
                ('installed', models.BooleanField()),
                ('isVerified', models.BooleanField()),
                ('lastName', models.TextField()),
                ('local', models.TextField()),
                ('location', models.TextField()),
                ('middle_name', models.TextField()),
                ('political', models.TextField()),
                ('region', models.TextField()),
                ('relationship_status', models.TextField()),
                ('religion', models.TextField()),
                ('timezone', models.IntegerField(help_text="The person's current timezone offset from UTC(-24 to 24)")),
                ('updatedTime', models.DateTimeField()),
            ],
        ),
        migrations.AddField(
            model_name='userlanguage',
            name='userId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Userprofile'),
        ),
        migrations.AddField(
            model_name='userimage',
            name='userId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Userprofile'),
        ),
        migrations.AddField(
            model_name='userhobby',
            name='userId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Userprofile'),
        ),
        migrations.AddField(
            model_name='usereducation',
            name='userId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Userprofile'),
        ),
        migrations.AddField(
            model_name='userdevice',
            name='userId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Userprofile'),
        ),
        migrations.AddField(
            model_name='useraddress',
            name='userId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Salon.Userprofile'),
        ),
    ]
